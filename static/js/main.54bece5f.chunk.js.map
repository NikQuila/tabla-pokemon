{"version":3,"sources":["components/mostrarInput.component.jsx","App.js","serviceWorker.js","index.js"],"names":["MostrarInput","props","name","onSubmit","handleSubmit","type","placeholder","onChange","handleChangeNombre","handleChangeCodigo","id","handleChangeTorneo","value","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","torneosRef","database","ref","App","componentDidMount","a","once","then","snapshot","val","torneosData","Object","values","dataFromFirebase","forEach","playerFF","push","setState","players","event","beforeState","assign","state","newPlayer","target","replace","onlineCode","puntajeTorneos","puntajeTotal","map","element","Number","key","preventDefault","existOrNot","allData","player","index","findIndex","playerToUpdate","child","set","torneos","this","className","Table","striped","bordered","hover","variant","torneo","puntaje","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.54bece5f.chunk.js","sourcesContent":["import React from \"react\";\r\n// import Col from \"react-bootstrap/Col\";\r\n// import Form from \"react-bootstrap/Form\";\r\n\r\nconst MostrarInput = (props) => {\r\n  return (\r\n    <div>\r\n      <form name=\"first\" onSubmit={props.handleSubmit}>\r\n        <label>\r\n          1° (100 puntos) Nombre,código y n°Torneo:\r\n          <input\r\n            name=\"nombre\"\r\n            type=\"text\"\r\n            placeholder=\"nombre\"\r\n            onChange={props.handleChangeNombre}\r\n          />\r\n          <input\r\n            name=\"codigo\"\r\n            type=\"text\"\r\n            placeholder=\"codigo\"\r\n            onChange={props.handleChangeCodigo}\r\n          />\r\n          <input\r\n            name=\"torneo\"\r\n            id=\"100\"\r\n            type=\"number\"\r\n            placeholder=\"torneo\"\r\n            onChange={props.handleChangeTorneo}\r\n          />\r\n        </label>\r\n        <input type=\"submit\" value=\"Submit\" />\r\n      </form>\r\n      <form name=\"second\" onSubmit={props.handleSubmit}>\r\n        <label>\r\n          2°(75 puntos) Nombre,código y n°Torneo:\r\n          <input\r\n            name=\"nombre\"\r\n            type=\"text\"\r\n            placeholder=\"nombre\"\r\n            onChange={props.handleChangeNombre}\r\n          />\r\n          <input\r\n            name=\"codigo\"\r\n            type=\"text\"\r\n            placeholder=\"codigo\"\r\n            onChange={props.handleChangeCodigo}\r\n          />\r\n          <input\r\n            name=\"torneo\"\r\n            id=\"75\"\r\n            type=\"number\"\r\n            placeholder=\"torneo\"\r\n            onChange={props.handleChangeTorneo}\r\n          />\r\n        </label>\r\n        <input type=\"submit\" value=\"Submit\" />\r\n      </form>\r\n      <form name=\"third\" onSubmit={props.handleSubmit}>\r\n        <label>\r\n          3°(50 puntos) Nombre,código y n°Torneo:\r\n          <input\r\n            name=\"nombre\"\r\n            type=\"text\"\r\n            placeholder=\"nombre\"\r\n            onChange={props.handleChangeNombre}\r\n          />\r\n          <input\r\n            name=\"codigo\"\r\n            type=\"text\"\r\n            placeholder=\"codigo\"\r\n            onChange={props.handleChangeCodigo}\r\n          />\r\n          <input\r\n            name=\"torneo\"\r\n            id=\"50\"\r\n            type=\"number\"\r\n            placeholder=\"torneo\"\r\n            onChange={props.handleChangeTorneo}\r\n          />\r\n        </label>\r\n        <input type=\"submit\" value=\"Submit\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default MostrarInput;\r\n","import React, { Component } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport \"./App.css\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport \"firebase/firestore\";\nimport \"firebase/database\";\nimport MostrarInput from \"./components/mostrarInput.component\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDr-2kOz_dKDnG02RZX-_GwOgSzyv8jVHk\",\n  authDomain: \"tablas-posiciones.firebaseapp.com\",\n  databaseURL: \"https://tablas-posiciones.firebaseio.com\",\n  projectId: \"tablas-posiciones\",\n  storageBucket: \"tablas-posiciones.appspot.com\",\n  messagingSenderId: \"378257734787\",\n  appId: \"1:378257734787:web:27a9ef41e5f0d10cb96fb6\",\n  measurementId: \"G-B033JV69H0\",\n};\nfirebase.initializeApp(firebaseConfig);\nvar torneosRef = firebase.database().ref(\"/pokemon\");\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      players: [],\n      newPlayer: {},\n      torneos: [\"torneo 1\", \"torneo 2\", \"torneo 3\", \"torneo 4\", \"torneo 5\"],\n    };\n  }\n\n  componentDidMount = async () => {\n    var torneosData = await torneosRef\n      .once(\"value\")\n      .then((snapshot) => snapshot.val());\n    if (torneosData) {\n      torneosData = Object.values(torneosData);\n      var dataFromFirebase = [];\n      torneosData.forEach((playerFF) => {\n        dataFromFirebase.push(playerFF);\n      });\n      this.setState({ players: dataFromFirebase });\n    }\n  };\n\n  handleChangeNombre = (event) => {\n    var beforeState = Object.assign({}, this.state.newPlayer);\n    beforeState.name = event.target.value;\n    this.setState({\n      newPlayer: beforeState,\n    });\n  };\n  handleChangeCodigo = (event) => {\n    event.target.value = event.target.value.replace(/\\D/g, \"\");\n    var beforeState = Object.assign({}, this.state.newPlayer);\n    beforeState.onlineCode = event.target.value;\n    this.setState({\n      newPlayer: beforeState,\n    });\n  };\n\n  handleChangeTorneo = (event) => {\n    var beforeState = Object.assign({}, this.state.newPlayer);\n    beforeState.puntajeTorneos = [0, 0, 0, 0, 0];\n    beforeState.puntajeTorneos[event.target.value - 1] = event.target.id;\n    beforeState.puntajeTotal = 0;\n    beforeState.puntajeTorneos.map((element) => {\n      return (beforeState.puntajeTotal += Number(element));\n    });\n    beforeState.key = 4;\n    this.setState({\n      newPlayer: beforeState,\n    });\n  };\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    var existOrNot = false;\n    var allData = this.state.players;\n\n    allData.forEach((player) => {\n      if (player.onlineCode === this.state.newPlayer.onlineCode) {\n        existOrNot = true;\n        const index = this.state.newPlayer.puntajeTorneos.findIndex(\n          (element) => element > 0\n        );\n        player.puntajeTorneos[index] = Number(\n          this.state.newPlayer.puntajeTorneos[index]\n        );\n        player.puntajeTotal = 0;\n        player.puntajeTorneos.map((element) => {\n          return (player.puntajeTotal += Number(element));\n        });\n      }\n    });\n    if (!existOrNot) {\n      allData.push(this.state.newPlayer);\n    }\n    await this.setState({ players: allData });\n    this.state.players.forEach((playerToUpdate) => {\n      torneosRef.child(playerToUpdate.onlineCode).set({\n        name: playerToUpdate.name,\n        onlineCode: playerToUpdate.onlineCode,\n        puntajeTorneos: playerToUpdate.puntajeTorneos,\n        puntajeTotal: playerToUpdate.puntajeTotal,\n      });\n    });\n  };\n  render() {\n    const { players } = this.state;\n    return (\n      // mostar input\n\n      // tabla inical\n\n      <div className=\"tabla-posiciones\">\n        <MostrarInput\n          handleChangeNombre={this.handleChangeNombre}\n          handleChangeCodigo={this.handleChangeCodigo}\n          handleChangeTorneo={this.handleChangeTorneo}\n          handleSubmit={this.handleSubmit}\n        ></MostrarInput>\n\n        <Table striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th>Nombre</th>\n              {this.state.torneos.map((torneo) => (\n                <th key={torneo}>{torneo}</th>\n              ))}\n              <th>Total</th>\n            </tr>\n          </thead>\n          <tbody>\n            {players.map((player) => (\n              <tr key={player.onlineCode}>\n                <td>{player.name}</td>\n                {player.puntajeTorneos.map((puntaje, index) => (\n                  <td key={index}>{puntaje}</td>\n                ))}\n\n                <td>{player.puntajeTotal}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}